<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:aop="http://www.springframework.org/schema/aop"
	 xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="schema.sql"/>
        <jdbc:script location="data.sql"/>
    </jdbc:embedded-database>
    
    
    
    
    <bean id="databaseFacade" class="my.spitterP.mainP.HibernateSpitterDaoFromTemplate" />
       
    
	<tx:annotation-driven/>

	<context:component-scan base-package="my.spitterP.mainP" />

   <!--   <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="my.spitterP.mainP.domain"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>        
    </bean>
    -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
     <!--<start id="bean_sessionFactory" />--> 
 <bean id="sessionFactory"
  class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
  <property name="dataSource" ref="dataSource" />
  <property name="mappingResources">
   <list>
    <value>Spitter.hbm.xml</value>
     <value>Spittle.hbm.xml</value>
   </list>
  </property>
 
 </bean>
 <!--<end id="bean_sessionFactory" />-->

 
 
 
 <!-- programmatic spitterService -->
 <bean id="spitterService" class="my.spitterP.mainP.SpitterServiceImplProgrammatic">
 <property name="transactionTemplate">
 	<bean class="org.springframework.transaction.support.TransactionTemplate">
 	<property name="transactionManager" ref="transactionManager" />	
 	</bean>
 </property>
 <property name="spitterDao" ref="databaseFacade"/>
 </bean>
 
 
 
 <!-- declarative by aspect -->
 <bean id="spitterServiceDecl" class="my.spitterP.mainP.SpitterServiceImplDeclarative">
  <property name="spitterDao" ref="databaseFacade"/>
 </bean>
 
 <!--<start id="bean_hibernateTemplate" />--> 
 <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
  <property name="sessionFactory" ref="sessionFactory" />
 </bean>
 <!--<end id="bean_hibernateTemplate" />--> 
 
 
 <tx:advice id="txAdvice"> 
    <tx:attributes> 
      <tx:method name="add*" propagation="REQUIRED" /> 
      <tx:method name="save*" propagation="REQUIRED" /> 
      <tx:method name="*" propagation="SUPPORTS" 
          read-only="true"/> 
    </tx:attributes> 
  </tx:advice> 
  
  <aop:config>
    <aop:advisor 
        pointcut="execution(* *..SpitterService.*(..))"
        advice-ref="txAdvice" />
  </aop:config>
  

  
  
  
  
 

</beans>